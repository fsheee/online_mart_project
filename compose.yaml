:version: '3.8'
name: afsheen_online_mart
services:
  
  payment_service:
    build:
      context: ./payment_service  # Ensure this path is correct
      dockerfile: Dockerfile.dev
    volumes:
      - ./payment_service:/code  # Sync local development directory with the container
    depends_on:
      - payment_db
    ports:
      - "8002:8000"  # Expose container port 8000 to host port 8002
  
  payment_db:
    image: postgres:latest
    restart: always
    container_name: PaymentContainer
    environment:
      POSTGRES_USER: afsheen
      POSTGRES_PASSWORD: abc
      POSTGRES_DB: paymentdb
    ports:
      - '5448:5432'
    env_file:
    - ./payment_service/.env  
    volumes:
      - payment_db:/var/lib/postgresql/data

  product_service:
    build:
      context: ./product_service
      dockerfile: Dockerfile.dev
     # Sync local development directory with the container
    depends_on:
      - shop_db
      - broker
    ports:
      - "8005:8000"  # Expose container port 8000 to host port 8005
  
  
  inventory_service:
    build:
      context: ./inventory_service
      dockerfile: Dockerfile.dev
    volumes:
      - ./inventory_service:/code  # Sync local development directory with the container
    depends_on:
        - shop_db
        - broker
    ports:
      - "8007:8000"  # Expose container port 8000 to host port 8007
  notification_service:
    build:
      context: ./notification_service
      dockerfile: Dockerfile.dev
    volumes:
      - ./notification_service:/code  # Sync local development directory with the container
    depends_on:
      - notification_db
      - broker
    ports:
      - "8009:8000"  # Expose container port 8000 to host port 8009
    environment:
      SMTP_SERVER: smtp.mailtrap.io
      SMTP_PORT: "587"  # Default Mailtrap port for TLS
      SMTP_USERNAME: xyz
      SMTP_PASSWORD: xyz
      SMTP_FROM_EMAIL: xyz
  notification_db:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: NotificationContainer
    environment:
      POSTGRES_USER: afsheen
      POSTGRES_PASSWORD: abc
      POSTGRES_DB: notificationdb
    ports:
      - '5447:5432'
    env_file:
      - ./notification_service/.env
    volumes:
      - notification_db:/var/lib/postgresql/data
  
     
  order_service:
    build:
      context: ./order_service
      dockerfile: Dockerfile.dev
    volumes:
      - ./order_service:/code  # Sync local development directory with the container
    depends_on:
        - shop_db
        - broker
    ports:
      - "8008:8000"  # Expose container port 8000 to host port 8008
  shop_db:
    image: postgres:latest  # Use the official PostgreSQL image
    restart: always
    container_name: OrderContainer
    environment:
        - POSTGRES_USER=afsheen
        - POSTGRES_PASSWORD=abc
        - POSTGRES_DB=orderdb #rename it later
    ports:
      - '5446:5432'
    volumes:
      - shop_db:/var/lib/postgresql/data
    # mainey exposed port use kya hai but may be jo internal port right hand side wala daalna parey wese to localhost uthana chahye tha but i think config issue tha    

  user2_service:
    build:
      context: ./user2_service
      dockerfile: Dockerfile.dev
    volumes:
      - ./user2_service:/code  # Sync local development directory with the container
    depends_on:
        - shop_db
        - broker
    ports:
      - "8006:8000"  # Expose container port 8000 to host port 8006
  
  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: 'Local Kafka Cluster'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092'
      DYNAMIC_CONFIG_ENABLED: "true"
    depends_on:
      - broker
volumes:
  payment_db:
    driver: local
  shop_db:
    driver: local
  notification_db:
     driver: local

networks:
  default:
    driver: bridge
